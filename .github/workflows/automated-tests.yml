---
name: Automated Tests

on: [push, pull_request]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: |
            /var/cache/apt/archives
            ~/.cache/pip
            Software/LMSourceCode/ImageProcessing/build
          key: ${{ runner.os }}-dependencies-${{ hashFiles('**/CMakeLists.txt', 'Software/LMSourceCode/ImageProcessing/**/*.h', 'Software/LMSourceCode/ImageProcessing/**/*.hpp') }}
          restore-keys: |
            ${{ runner.os }}-dependencies-

      - name: Configure Boost
        run: |
          sudo apt-get install libboost1.74-all
          # Create boost.pc file to tell meson how to find boost files
          sudo mkdir -p /usr/share/pkgconfig
          sudo tee /usr/share/pkgconfig/boost.pc > /dev/null << 'EOL'
          # Package Information for pkg-config  
          # Path to where Boost is installed  
          prefix=/usr  
          # Path to where libraries are  
          libdir=${prefix}/lib  
          # Path to where include files are  
          includedir=${prefix}/boost  
          Name: Boost  
          Description: Boost provides free peer-reviewed portable C++ source libraries  
          Version: 1.74.0
          Libs: -L${libdir} -lboost_filesystem -lboost_system -lboost_timer -lboost_log -lboost_chrono -lboost_regex -lboost_thread -lboost_program_options  
          Cflags: -isystem ${includedir}
          EOL
          # Fix issue when compiling boost under C++20
          sudo sed -i '/#include <memory>/a #include <utility>' /usr/include/boost/asio/awaitable.hpp

      - name: Install liblgpio
        run: |
          mkdir -p ~/Dev
          cd ~/Dev
          wget http://abyz.me.uk/lg/lg.zip
          unzip lg.zip
          cd lg
          make
          sudo make install
          sudo tee /usr/share/pkgconfig/lgpio.pc > /dev/null << 'EOL'
          # Package Information for pkg-config
          prefix=/usr/local
          exec_prefix=$${prefix}
          libdir=$${exec_prefix}/lib
          includedir=$${prefix}/include/
          Name: lgpio
          Description: Open Source GPIO library
          Version: 1.0.0
          Libs: $${exec_prefix}/lib/liblgpio.so
          Cflags: -I$${includedir}
          EOL

      - name: Install libcamera PreRequisites
        run: |
          sudo apt-get install -y libevent-dev
          sudo apt install -y pybind11-dev
          sudo apt -y install doxygen
          sudo apt install -y python3-graphviz
          sudo apt install -y python3-sphinx
          sudo apt install -y python3-yaml python3-ply
          sudo apt install -y libavdevice-dev
          sudo apt install -y qtbase5-dev libqt5core5a libqt5gui5 libqt5widgets5
          sudo apt install -y python3-pip git python3-jinja2

      - name: Make libcamera
        run: |
          cd ~/Dev
          git clone https://github.com/raspberrypi/libcamera.git
          cd libcamera
          meson setup build --buildtype=release -Dpipelines=rpi/vc4,rpi/pisp -Dipas=rpi/vc4,rpi/pisp -Dv4l2=true -Dgstreamer=enabled -Dtest=false -Dlc-compliance=disabled -Dcam=disabled -Dqcam=disabled -Ddocumentation=disabled -Dpycamera=enabled
          ninja -C build
          sudo ninja -C build install

      - name: Set up ccache
        uses: hendrikmuhs/ccache-action@v1.2
        with:
          key: ${{ runner.os }}-ccache-${{ github.ref }}
          max-size: 1G
